<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title></title>
        <link>undefined</link>
        <description>undefined</description>
        <lastBuildDate>Sun, 23 Jul 2023 14:28:12 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>Joplin Pages Publisher</generator>
        <item>
            <title><![CDATA[Joplin]]></title>
            <guid>c980c07a6e6e43199da8edadc67067d8</guid>
            <pubDate>Sun, 23 Jul 2023 06:22:25 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="why-joplin">Why Joplin?</h2>
<p>I was looking for a note-taking app and found that everyone hypes <a title="https://www.notion.so/" href="https://www.notion.so/">Notion</a> these days. I used to take notes on Google Keeps, OneNotes, and Mac's Notes. All these apps are limited in feature compare to Notion, and it also has nice and clean UI for enjoyable user experience. However, it is just a yet another freeware which has no native app support for Linux. For a FOSS supporter, this is a bad impression, no matter how good it is. So I looked for an alternative and ended up with Joplin. It is an open source and has all the features I wanted.</p>
<ol>
<li>App for Linux</li>
<li>Multi-device Sync</li>
<li>Markdown Support</li>
<li>Publishing the notes to Web</li>
<li>Drawing Support (draw.io and excalidraw)</li>
<li>Knowledge Graph</li>
</ol>
<h3 id="1-app-for-linux">1. App for Linux</h3>
<p>It is available in AppImage and easy to set up. Just download the AppImage file, set execute permission, then double-click on the file.<br />
Another option is running the installer script in Shell. It creates the desktop icon as well.</p>
<div><pre class="hljs"><code>wget -O - https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/laurent22/</span>joplin<span class="hljs-regexp">/dev/</span>Joplin_install_and_update.sh | bash</code></pre></div>
<h3 id="2-multi-device-sync">2. Multi-device Sync</h3>
<p>Joplin provides the commercial cloud service for the data sync but we can use other third-party cloud storages such as DropBox, OneDrive, NextCloud, or S3. I'm using DropBox.</p>
<h3 id="3-markdown-support">3. Markdown Support</h3>
<p>Markdown is the native format for Joplin but there are some plugins to make it look better. I don't use them as the default is enough for me.</p>
<h3 id="4-publishing-the-notes-to-web">4. Publishing the notes to Web</h3>
<p>This is the main feature I wanted. I used to write blogs hosted on <a title="https://pages.github.com/" href="https://pages.github.com/">GitHub Pages</a> by using a static site generator, <a title="https://gohugo.io/" href="https://gohugo.io/">Hugo</a>. Notion is way more better as there are a lot of free and paid templates, and also cool features. But publishing the notes with custom domain is not available in free account. My requirement is simple, just want to share some notes to public for my channel, <a title="https://www.youtube.com/@KnowYourLinux" href="https://www.youtube.com/@KnowYourLinux">KnowYourLinux</a> and it has to be organized. <a title="https://github.com/ylc395/joplin-plugin-pages-publisher" href="https://github.com/ylc395/joplin-plugin-pages-publisher">Joplin Pages Publisher</a> is good enough for that.</p>
<h3 id="5-drawing-support">5. Drawing Support</h3>
<p>I always use <a title="https://draw.io/" href="https://draw.io/">draw.io</a> for architecture diagrams and <a title="https://excalidraw.com/" href="https://excalidraw.com/">excalidraw</a> for some drafts and sketches. There are plugins for both. We can search and install draw.io plugin directly from the Plugins setting of Joplin app, but for excalidraw plugin, only lower version is available in there and it doesn't work with newer Joplin version. We need to download <code>.jpl</code> from the GitHub project and install manually from file.<br />
<a title="https://github.com/marc0l92/joplin-plugin-drawio" href="https://github.com/marc0l92/joplin-plugin-drawio">joplin-plugin-drawio</a><br />
<a title="https://github.com/artikell/joplin-excalidraw" href="https://github.com/artikell/joplin-excalidraw">joplin-excalidraw</a></p>
<h3 id="6-knowledge-graph">6. Knowledge Graph</h3>
<p>This one is just a fancy feature for me at the moment. I just want to give it a try.<br />
<a title="https://github.com/treymo/joplin-link-graph" href="https://github.com/treymo/joplin-link-graph">joplin-link-graph</a></p>
<p>I will add more if I found new useful features.</p>
<p>Cheers!</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Fixing a broken sudoers file]]></title>
            <guid>fe5b60fbc1c7493b84290dcf5a95ef27</guid>
            <pubDate>Sun, 16 Jul 2023 14:48:58 GMT</pubDate>
            <content:encoded><![CDATA[<p>Need to open two SSH sessions to the server.</p>
<p><strong>Step 1</strong><br />
Get the process ID of the shell from the first SSH session.</p>
<div><pre class="hljs"><code>user<span class="hljs-variable">@server</span><span class="hljs-symbol">:~</span><span class="hljs-variable">$ </span>echo <span class="hljs-variable">$$</span>
<span class="hljs-number">20486</span></code></pre></div>
<p><strong>Step 2</strong><br />
Start a PolicyKit authentication agent in the second session. Use the PID from the first step.</p>
<div><pre class="hljs"><code>user<span class="hljs-variable">@server</span><span class="hljs-symbol">:~</span><span class="hljs-variable">$ </span>pkttyagent --process <span class="hljs-number">20486</span></code></pre></div>
<p><strong>Step 3</strong><br />
Open the sudoers file to be fixed in the first session by using <code>pkexec</code></p>
<div><pre class="hljs"><code>user<span class="hljs-variable">@server</span><span class="hljs-symbol">:~</span><span class="hljs-variable">$ </span>pkexec vi /etc/sudoers</code></pre></div>
<p><strong>Step 4</strong><br />
Password prompt will appear in the second session. Login user account,  <code>user</code>, needs to be a sudoer and type in its password.</p>
<div><pre class="hljs"><code>user@server:~$ pkttyagent --process 20486
<span class="hljs-section">==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===</span>
Authentication is needed to run <span class="hljs-string">`/usr/bin/vi'</span> as the super user
Authenticating as: User,,, (user)
Password:</code></pre></div>
<p><strong>Setp 5</strong><br />
The sudoers file will be opened in the first session. Fix or update as needed.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[JAVA Heap Analysis]]></title>
            <guid>a775414b6670437fa9e58c6b1a4755c6</guid>
            <pubDate>Fri, 30 Jun 2023 05:19:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="java-heap-analysis">JAVA Heap Analysis</h2>
<p>This is just a note for my personal use. To verify the Java heap usage, we can use <code>jstat</code> command.</p>
<p><code>jstat -gc &lt;PID&gt;</code></p>
<p>S0C - Eden space capacity<br />
S1C - Survivor space capacity<br />
EC - Eden space capacity<br />
OC - Old space capacity</p>
<p>S0U - Eden space utilization<br />
S1U - Survivor space utilization<br />
EU - Eden space utilization<br />
OU - Old space utilization</p>
<p>Heap Utilizaiton = S0U + S1U + EU + OU<br />
Heap Capacity = S0C + S1C + EC + OC</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[VIM Cheatsheet]]></title>
            <guid>b15c6c624ce945bab9be5c7655efcee3</guid>
            <pubDate>Fri, 26 May 2023 13:49:15 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="vim-cheatsheet">VIM Cheatsheet</h2>
<p><strong>Page Up/Down</strong><br />
<code>Ctrl+b</code> - full page up<br />
<code>Ctrl+f</code> - full page down<br />
<code>Ctrl+u</code> - half page up<br />
<code>Ctrl+d</code> - half page down</p>
<hr />
<p><strong>Explorer</strong><br />
<code>:Ex</code> - explore files<br />
<code>%</code> - new file<br />
<code>d</code> - new directory</p>
<hr />
<p><strong>Split</strong><br />
<code>:bd</code> - buffer delete</p>
<p><code>:copen</code> - list files<br />
<code>:cn</code> - next<br />
<code>:cp</code> - previous</p>
<p><code>:sp</code> - split<br />
<code>:vsp</code> - v-split</p>
<p><code>C+w [h,j,k,l]</code> - navigation</p>
<p><code>C+w =</code> - equal splits<br />
<code>C+w _</code> - max current split<br />
<code>C+w |</code> - max current v-split</p>
<hr />
<p><strong>Tab</strong><br />
<code>tabe</code> - tab edit<br />
<code>gt</code> - next tab e.g. gt, 3gt<br />
<code>gT</code> - previous tab<br />
<code>:tabnew</code> - new tab<br />
<code>:tabm</code> - move tab to right end<br />
<code>:tabm 0</code> - move tab to left end<br />
<code>:tabclose</code> - close tab<br />
<code>:tabonly</code> - active tab only<br />
<code>:tab ball</code> - open all buffer<br />
<code>:drop file.txt</code> - open file.txt in current tab<br />
<code>C+w T</code> - open the current split in new tab</p>
<hr />
<p><strong>Mark</strong><br />
<code>m[char]</code> - mark e.g. ma, mb, mc<br />
<code>'[char]</code> - go to marked line e.g. 'a, 'b, 'c<br />
<code> `[char]</code>  - go to marked position e.g. `a, `b<br />
<code>:marks</code> - list marks<br />
<code>:delmarks a,b,c</code> - delete marks<br />
<code>:delmarks!</code> - delete all marks</p>
<hr />
<p><strong>Fold</strong><br />
<code>zf</code> - fold selected visual lines<br />
<code>zo</code> - open fold<br />
<code>zc</code> - close fold<br />
<code>zd</code> - delete fold<br />
<code>zE</code> - delete all fold<br />
<code>zA</code> - open/close all fold in toggle</p>
<hr />
<p><strong>Explorer</strong><br />
<code>Ex</code> - horizontal explorer<br />
<code>Vex</code> - vertical explorer<br />
<code>gh</code> - hide/unhide hidden files<br />
<code>I</code> - hide/unhide banner<br />
<code>i</code> - change view style</p>
]]></content:encoded>
        </item>
    </channel>
</rss>